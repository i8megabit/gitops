apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.release.namespace }}
  labels:
    app: ollama
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: ollama
  template:
    metadata:
      labels:
        app: ollama
      annotations:
        nvidia.com/cuda-version: "12.8"
    spec:
      nodeSelector:
        nvidia.com/gpu: "present"
      tolerations:
      - key: "nvidia.com/gpu"
        operator: "Exists"
        effect: "NoSchedule"
      initContainers:
        - name: nvidia-driver-validation
          image: "nvidia/cuda:12.8.0-base-ubuntu22.04"
          command: ["nvidia-smi"]
          resources:
            limits:
              nvidia.com/gpu: "1"
        - name: init-ollama-dir
          image: busybox:latest
          command:
            - /bin/sh
            - -c
            - |
              mkdir -p /data/.ollama /data/.cuda-cache && \
              chown -R 1000:1000 /data && \
              chmod -R 755 /data
          volumeMounts:
            - name: ollama-data
              mountPath: /data
      containers:
        - name: ollama
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: HOME
              value: /data
            {{- with .Values.deployment.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          volumeMounts:
            - name: ollama-data
              mountPath: /data
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
      volumes:
        - name: ollama-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc

