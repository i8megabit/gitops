name: Build and Release

on:
  push:
    branches:
      - develop
    tags:
      - 'v*'

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: windows
            arch: amd64
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set version
        id: version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "RELEASE_TYPE=release" >> $GITHUB_OUTPUT
          else
          COMMIT_SHA=$(git rev-parse --short HEAD)
          echo "VERSION=develop-${COMMIT_SHA}" >> $GITHUB_ENV
          echo "RELEASE_TYPE=develop" >> $GITHUB_OUTPUT
          fi

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Install CUDA Dependencies
        if: matrix.os == 'linux'
        run: |
          wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb
          sudo dpkg -i cuda-keyring_1.1-1_all.deb
          sudo apt-get update
          sudo apt-get -y install cuda-toolkit-12-8

      - name: Build Binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          OUTPUT="tools/zakenak/build/zakenak-${{ matrix.os }}-${{ matrix.arch }}"
          if [ "${{ matrix.os }}" = "windows" ]; then
          OUTPUT="${OUTPUT}.exe"
          fi
          mkdir -p tools/zakenak/build
          cd tools/zakenak
          go build -o "${OUTPUT}" -ldflags="-X main.Version=${VERSION}" ./cmd/zakenak

      - name: Upload Development Artifacts
        uses: actions/upload-artifact@v4
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        with:
          name: zakenak-${{ steps.version.outputs.RELEASE_TYPE }}-${{ matrix.os }}-${{ matrix.arch }}
          path: tools/zakenak/build/zakenak-*
          retention-days: 5

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v4
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          name: zakenak-${{ steps.version.outputs.RELEASE_TYPE }}-${{ matrix.os }}-${{ matrix.arch }}
          path: tools/zakenak/build/zakenak-*
          retention-days: 90


      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: tools/zakenak/build/zakenak-*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        env:
          REGISTRY: ghcr.io
          IMAGE_NAME: ${{ github.repository }}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          cd tools/zakenak
          docker build \
          --build-arg VERSION=${VERSION} \
          -t ghcr.io/${{ github.repository }}:${VERSION} \
          .
          docker push ghcr.io/${{ github.repository }}:${VERSION}
          
          if [[ "${{ steps.version.outputs.RELEASE_TYPE }}" == "release" ]]; then
          docker tag ghcr.io/${{ github.repository }}:${VERSION} ghcr.io/${{ github.repository }}:latest
          docker push ghcr.io/${{ github.repository }}:latest
          fi
